"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[943],{7942:(e,n,r)=>{r.d(n,{Zo:()=>m,kt:()=>f});var t=r(959);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},m=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(r),d=o,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||a;return r?t.createElement(f,i(i({ref:n},m),{},{components:r})):t.createElement(f,i({ref:n},m))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},333:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var t=r(1163),o=(r(959),r(7942));const a={sidebar_position:1,title:"Install"},i=void 0,p={unversionedId:"install",id:"install",title:"Install",description:"@arkejs/form Arke form is a component to automate form generation process",source:"@site/docs/install.md",sourceDirName:".",slug:"/install",permalink:"/form/docs/install",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/install.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Install"},sidebar:"docsSidebar"},l={},s=[{value:"Step 1: Create a FormConfigProvider",id:"step-1-create-a-formconfigprovider",level:2},{value:"Step 2: Create a Form",id:"step-2-create-a-form",level:2}],m={toc:s},c="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(c,(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@arkejs/form")," Arke form is a component to automate form generation process"),(0,o.kt)("p",null,"Is available on npm registry, visit ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@arkejs/form"},"https://www.npmjs.com/package/@arkejs/form")),(0,o.kt)("p",null,"Install the library running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm install @arkejs/form\n")),(0,o.kt)("h2",{id:"step-1-create-a-formconfigprovider"},"Step 1: Create a FormConfigProvider"),(0,o.kt)("p",null,"You can create a FormConfigProvider to associate automatically a component to field type:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FormConfigProvider } from '@arkejs/form'\n\nfunction Application() {\n    return (\n        <FormConfigProvider\n            components={{\n                boolean: (props) => (<input {...props} type=\"checkbox\" onChange={(e) => props.onChange(e.target.value)} />),\n                string: (props) => (<MaterialInput {...props} onChange={(e) => props.onChange(e.target.value)}/>),\n                date: (props) => (<TailwindDate{...props} onChange={(e) => props.onChange(e.target.value)}/>)\n                default: (props) => (<div>{props.type} not found</div>)\n            }}\n        >\n            ...\n        </FormConfigProvider>\n    )\n}\n")),(0,o.kt)("h2",{id:"step-2-create-a-form"},"Step 2: Create a Form"),(0,o.kt)("p",null,"Use Form and the FormField components to create your Form:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { Form, FormField } from \'@arkejs/form\'\n\nfunction Application() {\n    const [loading, setLoading] = useState(false);\n    const fields = [\n        {\n            id: "name",\n            label: "Name",\n            required: true,\n            type: "string",\n        },\n        {\n            id: "surname",\n            label: "Surname",\n            required: true,\n            type: "string",\n        },\n        {\n            id: "email",\n            label: "Email",\n            required: false,\n            type: "string",\n        },\n        {\n            id: "active",\n            label: "Active",\n            required: false,\n            type: "boolean",\n        },\n        {\n            id: "profile_image",\n            label: "Profile image",\n            required: false,\n            type: "string",\n        },\n    ];\n    \n    return (\n        <FormConfigProvider>\n            <Form\n                fields={fields}\n                onSubmit={(values) => setData(values)}\n                onChange={(values) => console.log(values)}\n            >\n                {({ fields }) =>\n                    loading ? (\n                        <Loader size={20} />\n                    ) : (\n                        <div>\n                            <FormField id="name"/>\n                            <FormField id="surname"/>\n                            <FormField id="email"/>\n                            <FormField id="active"/>\n                        </div>\n                    )}\n            </Form>\n        </FormConfigProvider>\n    )\n}\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can create customized single FormField components through the ",(0,o.kt)("inlineCode",{parentName:"p"},"component")," prop:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},'<FormField \n    id="profile_image" \n    render={(props) => <ProfileImage {...props}/>} \n/>\n'))),(0,o.kt)("p",null,"You can also use the Form without the general FormConfigProvider and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"components")," props to define the components\nby field type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Form, FormField } from \'@arkejs/form\'\n\nfunction Application() {\n    return (\n        <Form\n            onSubmit={(values) => setData(values)}\n            onChange={(values) => console.log(values)}\n            // Define here the components\n            components={{\n                boolean: (props) => (<input {...props} type="checkbox" />),\n                string: (props) => (<input{...props} />)\n            }}\n        >\n            {({ fields }) =>\n                <div\n                    style={{\n                        display: \'grid\',\n                        gridTemplateColumns: \'auto auto auto auto\',\n                        gridGap: \'8px 20px\',\n                    }}\n                >\n                    <FormField id="name" type="string" />\n                    <FormField id="surname" type="string"/>\n                </div>\n            )}\n        </Form>\n    )\n}\n')))}u.isMDXComponent=!0}}]);